{"ast":null,"code":"import _classCallCheck from \"/Users/hbrinkley/Git/asylumconnect-communities/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hbrinkley/Git/asylumconnect-communities/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hbrinkley/Git/asylumconnect-communities/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hbrinkley/Git/asylumconnect-communities/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hbrinkley/Git/asylumconnect-communities/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hbrinkley/Git/asylumconnect-communities/client/src/screens/Forum.js\";\nimport React from 'react';\nimport ForumItem from '../components/ForumItem';\nimport axios from 'axios';\nimport Button from '../components/Button';\nimport { Redirect } from 'react-router-dom';\nimport Popup from '../components/popup';\n\nvar ForumDisplay =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ForumDisplay, _React$Component);\n\n  function ForumDisplay(props) {\n    var _this;\n\n    _classCallCheck(this, ForumDisplay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForumDisplay).call(this, props));\n\n    _this.Redirect = function (e) {\n      _this.setState({\n        MakeForumRedirect: true\n      });\n    };\n\n    _this.handleLogout = function (event) {\n      event.preventDefault();\n      axios({\n        url: '/api/logout',\n        method: 'post',\n        data: {\n          username: _this.state.username,\n          password: _this.state.password\n        }\n      }).then(function (response) {\n        console.log(response);\n\n        if (response.data.status === 'success') {\n          _this.setState({\n            isAuthenticated: false\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      ForumInfoSubject: [],\n      ForumInfoTitle: [],\n      ForumInfoText: [],\n      MakeForumRedirect: false,\n      isAuthenticated: true\n    };\n    return _this;\n  }\n\n  _createClass(ForumDisplay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var forumSubject = [];\n      var forumTitle = [];\n      var forumText = [];\n      /*axios.get('/api/subcategories')\n          .then(response => {\n            var subcategoryId = response.data.data.subcategories.find(subcategory => {\n              //return subcategory.title == subcategoryTitle;\n            })._id;\n            return axios.get('/api/threads', {\n              params: {\n                //subcategoryId: subcategoryId\n              }\n            });\n          })\n        .then(res => {\n          console.log(res.data);\n           res.data.forEach(forumElement => {\n            forumSubject.push( forumElement.name);\n            forumTitle.push( forumElement.email)\n            forumText.push( forumElement.username)\n           });\n           this.setState({\n            ForumInfoSubject: forumSubject,\n            ForumInfoTitle:  forumTitle,\n            ForumInfoText:  forumText\n          });\n         });*/\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          ForumInfoSubject = _this$state.ForumInfoSubject,\n          ForumInfoTitle = _this$state.ForumInfoTitle,\n          ForumInfoText = _this$state.ForumInfoText,\n          MakeForumRedirect = _this$state.MakeForumRedirect,\n          isAuthenticated = _this$state.isAuthenticated;\n\n      if (!isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      }\n\n      var ForumData = ForumInfoSubject.map(function (forum, index) {\n        return React.createElement(ForumItem, {\n          key: index,\n          ForumSubject: forum,\n          ForumTitle: ForumInfoTitle[index],\n          ForumText: ForumInfoText[index],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      });\n\n      if (MakeForumRedirect) {\n        return React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Button, {\n        title: \"Make\",\n        onClick: this.Redirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" \"), React.createElement(Button, {\n        title: \"Logout\",\n        onClick: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \" \"), ForumData, React.createElement(ForumItem, {\n        ForumSubject: ForumInfoSubject,\n        ForumTitle: ForumInfoTitle,\n        ForumText: ForumInfoText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ForumDisplay;\n}(React.Component);\n\nexport default ForumDisplay;","map":{"version":3,"sources":["/Users/hbrinkley/Git/asylumconnect-communities/client/src/screens/Forum.js"],"names":["React","ForumItem","axios","Button","Redirect","Popup","ForumDisplay","props","e","setState","MakeForumRedirect","handleLogout","event","preventDefault","url","method","data","username","state","password","then","response","console","log","status","isAuthenticated","ForumInfoSubject","ForumInfoTitle","ForumInfoText","forumSubject","forumTitle","forumText","ForumData","map","forum","index","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ForumItem from '../components/ForumItem'\nimport axios from 'axios'\nimport Button from '../components/Button'\nimport  { Redirect } from 'react-router-dom'\nimport Popup from '../components/popup'\n\nclass ForumDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ForumInfoSubject: [],\n      ForumInfoTitle: [],\n      ForumInfoText: [],\n      MakeForumRedirect: false,\n      isAuthenticated: true\n    };\n  }\n\n  Redirect=e=>{\n    this.setState({\n      MakeForumRedirect: true\n    })\n  }\n\n  handleLogout = event => {\n    event.preventDefault();\n    axios({\n      url: '/api/logout',\n      method: 'post',\n      data: {\n        username: this.state.username,\n        password: this.state.password,\n      },\n      }).then(response => {\n        console.log(response);\n        if( response.data.status === 'success' ){\n          this.setState({\n            isAuthenticated: false\n          })\n        }\n      })\n  }\n\n  componentDidMount(){\n    let forumSubject =  [];\n    let forumTitle =  [];\n    let forumText =  [];\n\n    /*axios.get('/api/subcategories')\n        .then(response => {\n          var subcategoryId = response.data.data.subcategories.find(subcategory => {\n            //return subcategory.title == subcategoryTitle;\n          })._id;\n          return axios.get('/api/threads', {\n            params: {\n              //subcategoryId: subcategoryId\n            }\n          });\n        })\n      .then(res => {\n        console.log(res.data);\n\n        res.data.forEach(forumElement => {\n          forumSubject.push( forumElement.name);\n          forumTitle.push( forumElement.email)\n          forumText.push( forumElement.username)\n\n        });\n\n        this.setState({\n          ForumInfoSubject: forumSubject,\n          ForumInfoTitle:  forumTitle,\n          ForumInfoText:  forumText\n        });\n\n      });*/\n  }\n\n  render() {\n    const {ForumInfoSubject,ForumInfoTitle,ForumInfoText,MakeForumRedirect,isAuthenticated} = this.state;\n\n    if(!isAuthenticated) {\n      return  (\n        <Redirect to=\"/\" />\n      )\n    }\n\n    const ForumData = ForumInfoSubject.map((forum,index) => {\n      return (\n      <ForumItem\n      key = {index}\n      ForumSubject={forum}\n      ForumTitle={ForumInfoTitle[index]}\n      ForumText={ForumInfoText[index]} />\n      );\n    })\n    if(MakeForumRedirect){\n      return(\n        <Popup/>\n      )\n    }\n    return (\n      <div>\n        <Button title = 'Make' onClick={this.Redirect}> </Button>\n        <Button title = 'Logout' onClick={this.handleLogout}> </Button>\n        {ForumData}\n        <ForumItem\n          ForumSubject={ForumInfoSubject}\n          ForumTitle={ForumInfoTitle}\n          ForumText={ForumInfoText}/>\n      </div>\n    )\n  }\n}\nexport default ForumDisplay\n"]},"metadata":{},"sourceType":"module"}